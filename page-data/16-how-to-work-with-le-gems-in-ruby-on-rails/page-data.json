{"componentChunkName":"component---src-templates-blog-post-js","path":"/16-how-to-work-with-le-gems-in-ruby-on-rails/","webpackCompilationHash":"ee13614abdca802b29ea","result":{"data":{"site":{"siteMetadata":{"title":"Charlie Massry","author":"Charlie Massry"}},"markdownRemark":{"id":"15eb6eb5-d3a3-5e3e-8732-242c4c70d7bd","excerpt":"In Ruby, there is a huge community of packages, a lot of which interact with Ruby on Rails. These are called Gems, and they are hosted at RubyGems. Being aâ€¦","html":"<p>In Ruby, there is a huge community of packages, a lot of which interact with Ruby on Rails. These are called Gems, and they are hosted at <a href=\"http://rubygems.org\">RubyGems</a>. Being a Turing Complete language, there are Gems for just about any problem you could have in Ruby, and almost 80,000 of them are hosted at RubyGems. One of the most underrated aspects of Gems is, the documentation. While some Gems such as <a href=\"https://github.com/macournoyer/thin\">Thin</a> are pretty self explanatory and easy to get working, others require a lot more work to use the API and understand the documentation. Some big companies, such as <a href=\"http://thoughtbot.com\">thoughtbot</a> provide very extensive documentation with their Gems, like <a href=\"https://github.com/thoughtbot/clearance\">Clearance</a> or <a href=\"https://github.com/thoughtbot/paperclip\">Paperclip</a>. For others however, you must read the source code and experiment with it to fully understand how it works. Happy Wiki Diving.</p>","frontmatter":{"title":"How to Work With Le Gems in Ruby on Rails","date":"July 11, 2014"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/16-how-to-work-with-le-gems-in-ruby-on-rails/","previous":{"fields":{"slug":"/15-three-tables-are-better-than-two/"},"frontmatter":{"title":"Three Tables Are Better Than Two","id":15}},"next":{"fields":{"slug":"/17-what-s-the-point-of-tdd/"},"frontmatter":{"title":"What's the Point of TDD","id":17}}}}}