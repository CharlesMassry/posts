{"componentChunkName":"component---src-templates-blog-post-js","path":"/18-to_param-the-best-method-ever/","webpackCompilationHash":"160d915e56cff648a27d","result":{"data":{"site":{"siteMetadata":{"title":"Charlie Massry","author":"Charlie Massry"}},"markdownRemark":{"id":"0a5b1a3d-f274-595d-ace9-a8caeefc7f55","excerpt":"If you want to create vanity URLs, and who doesn’t, then to_param is the method for you. In fact it is my personal favorite method in Ruby on Rails, narrowly…","html":"<p>If you want to create vanity URLs, and who doesn’t, then to_param is the method for you. In fact it is my personal favorite method in Ruby on Rails, narrowly edging out time_ago_in_words.</p>\n<p>On Twitter, the link for a users profile  would look something like <a href=\"https://twitter.com/charlesmassry\">https://twitter.com/charlesmassry</a> which would call  the to_param method on the user model, if in fact Twitter used Rails. There is  one difficulty in this, users can’t have their usernames as certain reserved words,  like sign-out, or search. This can be remedied in two ways, one, you can check validation on the  usernames, or two, you can make it a part of the user resources,  /users/charlesmassry. The second way is much easier because you would  have to check validation on every reserved route if you chose the first one, however, I think the first way looks a lot cleaner.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app/models/user.rb\n\nclass User &lt; ActiveRecord::Base\n  ...\n  validates_exclusion_of :username, in: %w{ sign-out search }\n  ...\nend</code></pre></div>\n<p>As for the to_param method itself, you would just redefine it in your model.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app/models/user.rb\n\nclass User &lt; ActiveRecord::Base\n  ...\n  def to_param\n    username\n  end\n  ...\nend</code></pre></div>\n<p>By default, it is just an instance method that essentially returns a string  with the id of that resource to give you routes like <a href=\"https://twitter.com/1\">https://twitter.com/1</a> as  opposed to the username at the end.</p>","frontmatter":{"title":"to_param, the Best Method Ever","date":"July 15, 2014"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/18-to_param-the-best-method-ever/","previous":{"fields":{"slug":"/17-what-s-the-point-of-tdd/"},"frontmatter":{"title":"What's the Point of TDD","id":17}},"next":{"fields":{"slug":"/19-user-has_many-selfies/"},"frontmatter":{"title":"User has_many selfies","id":19}}}}}